# # ###############################################################################
# # Submission Configuration
# # ###############################################################################
# # This project uses isolate as an sandboxing environment.
# # Almost all of the options you see here can be mapped to one of the options
# # that isolate provides. For more information about these options please
# # check for the isolate documentation here:
# # https://raw.githubusercontent.com/ioi/isolate/master/isolate.1.txt

# # Default runtime limit for every program (in seconds). Decimal numbers are allowed.
# # Time in which the OS assigns the processor to different tasks is not counted.
# # Default: 5
# CPU_TIME_LIMIT=

# # Maximum custom CPU_TIME_LIMIT.
# # Default: 15
# MAX_CPU_TIME_LIMIT=

# # When a time limit is exceeded, wait for extra time (in seconds), before
# # killing the program. This has the advantage that the real execution time
# # is reported, even though it slightly exceeds the limit.
# # Default: 1
# CPU_EXTRA_TIME=

# # Maximum custom CPU_EXTRA_TIME.
# # Default: 5
# MAX_CPU_EXTRA_TIME=

# # Limit wall-clock time in seconds. Decimal numbers are allowed.
# # This clock measures the time from the start of the program to its exit,
# # so it does not stop when the program has lost the CPU or when it is waiting
# # for an external event. We recommend to use CPU_TIME_LIMIT as the main limit,
# # but set WALL_TIME_LIMIT to a much higher value as a precaution against
# # sleeping programs.
# # Default: 10
# WALL_TIME_LIMIT=

# # Maximum custom WALL_TIME_LIMIT.
# # Default: 20
# MAX_WALL_TIME_LIMIT=

# # Limit address space of the program in kilobytes.
# # Default: 128000
# MEMORY_LIMIT=

# # Maximum custom MEMORY_LIMIT.
# # Default: 512000
# MAX_MEMORY_LIMIT=

# # Limit process stack in kilobytes.
# # Default: 64000
# STACK_LIMIT=

# # Maximum custom STACK_LIMIT.
# # Default: 128000
# MAX_STACK_LIMIT=

# # Maximum number of processes and/or threads program can create.
# # Default: 60
# MAX_PROCESSES_AND_OR_THREADS=

# # Maximum custom MAX_PROCESSES_AND_OR_THREADS.
# # Default: 120
# MAX_MAX_PROCESSES_AND_OR_THREADS=

# # If true then CPU_TIME_LIMIT will be used as per process and thread.
# # Default: false, i.e. CPU_TIME_LIMIT is set as a total limit for all processes and threads.
ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT=true

# # If false, user won't be able to set ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT.
# # Default: true
# ALLOW_ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT=

# # If true then MEMORY_LIMIT will be used as per process and thread.
# # Default: false, i.e. MEMORY_LIMIT is set as a total limit for all processes and threads.
ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT=true

# # If false, user won't be able to set ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT.
# # Default: true
# ALLOW_ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT=

# # Limit size of files created (or modified) by the program in kilobytes.
# # Default: 1024
# MAX_FILE_SIZE=

# # Maximum custom MAX_FILE_SIZE.
# # Default: 4096
# MAX_MAX_FILE_SIZE=

# # Run each program this many times and take average of time and memory.
# # Default: 1
# NUMBER_OF_RUNS=

# # Maximum custom NUMBER_OF_RUNS.
# # Default: 20
# MAX_NUMBER_OF_RUNS=

# # Redirect stderr to stdout.
# # Default: false
# REDIRECT_STDERR_TO_STDOUT=

# # Maximum total size (in kilobytes) of extracted files from additional files archive.
# # Default: 10240, i.e. maximum of 10MB in total can be extracted.
# MAX_EXTRACT_SIZE=

# # Automatically restart server if it fails to start.
# # Default: 10
# RESTART_MAX_TRIES=

# # If enabled user can request to synchronically wait for
# # submission result on submission create.
# # Default: true, i.e. user can request to wait for the result
# ENABLE_WAIT_RESULT=

# # If enabled user is allowed to set custom compiler options.
# # Default: true
# ENABLE_COMPILER_OPTIONS=

# # List language names, separated by space, for which setting compiler options is allowed.
# # Note that ENABLE_COMPILER_OPTIONS has higher priority, so this option will be
# # ignored if setting compiler options is disabled with ENABLE_COMPILER_OPTIONS.
# # For example, ALLOWED_LANGUAGES_FOR_COMPILER_OPTIONS="C C++ Java" would only
# # allow setting compiler options for languages C, C++ and Java.
# # Default: empty - for every compiled language setting compiler options is allowed.
# ALLOWED_LANGUAGES_FOR_COMPILER_OPTIONS=

# # If enabled user is allowed to set custom command line arguments.
# # Default: true
# ENABLE_COMMAND_LINE_ARGUMENTS=

# # If enabled autorized users can delete a submission.
# # Default: false
# ENABLE_SUBMISSION_DELETE=

# # If enabled user can GET and POST batched submissions.
# # Default: true
# ENABLE_BATCHED_SUBMISSIONS=

# # Maximum number of submissions that can be created or get in a batch.
# # Default: 20
# MAX_SUBMISSION_BATCH_SIZE=

# # If enabled user can use callbacks.
# # Default: true
# ENABLE_CALLBACKS=

# # Maximum number of callback tries before giving up.
# # Default: 3
# CALLBACKS_MAX_TRIES=

# # Timeout callback call after this many seconds.
# # Default: 5
# CALLBACKS_TIMEOUT=

# # If enabled user can preset additional files in the sandbox.
# # Default: true
# ENABLE_ADDITIONAL_FILES=


# ################################################################################
# # Server Access Configuration
# ################################################################################
# # Allow only specified origins.
# # If left blank, then all origins will be allowed (denoted with '*').
# # Example:
# # ALLOW_ORIGIN="www.foo.com foo.com www.example.com blog.example.com"
# ALLOW_ORIGIN=

# # Disallow only specified origins.
# # If left blank, then no origin will be disallowed.
# # Example:
# # DISALLOW_ORIGIN="www.foo.com foo.com www.example.com blog.example.com"
# DISALLOW_ORIGIN=

# # Allow only specified IP addresses.
# # If left blank, then all IP addresses will be allowed.
# # Example:
# # ALLOW_IP="192.168.10.10 96.239.226.228 208.23.207.242"
# ALLOW_IP=

# # Disallow only specified IP addresses.
# # If left blank, then no IP addresses will be disallowed.
# # Example:
# # DISALLOW_IP="192.168.10.10 96.239.226.228 208.23.207.242"
# DISALLOW_IP=

# # Maintenance mode is a mode in which clients cannot
# # create or delete submissions while maintenance is enabled.
# # Default: false
# MAINTENANCE_MODE=

# # Set custom maintenance message that will be returned to clients
# # who try to create or delete submissions.
# # Default: Server is currently in maintenance.
# MAINTENANCE_MESSAGE=

# ################################################################################
# # Authentication Configuration
# ################################################################################
# # You can protect your API with (AUTHN_HEADER, AUTHN_TOKEN) pair.
# # Each request then needs to have this pair either in headers or
# # query parameters. For example let AUTHN_HEADER=X-Auth-Token and
# # AUTHN_TOKEN=mySecretToken. Then user should authenticate by sending this
# # in headers or query parameters in each request, e.g.:
# # https://api.example.com/system_info?X-Auth-Token=mySecretToken

# # Specify authentication header name.
# # Default: X-Auth-Token
# AUTHN_HEADER=

# # Specify valid authentication tokens.
# # Default: 4ec792fe-521f-420e-b4d6-88ab326f16e8
# AUTHN_TOKEN=


# ################################################################################
# # Authorization Configuration
# ################################################################################
# # Protected API calls can be issued with (AUTHZ_HEADER, AUTHZ_TOKEN) pair.
# # To see exactly which API calls are protected with authorization tokens
# # please read the docs at https://api.example.com.
# # API authorization ensures that only specified users call protected API calls.
# # For example let AUTHZ_HEADER=X-Auth-User and AUTHZ_TOKEN=mySecretToken.
# # Then user should authorize be sending this in headers or query parameters in
# # each request, e.g.: https://api.example.com/system_info?X-Auth-User=mySecretToken
# # Note that if you enabled authentication, then user should also send valid
# # authentication token.

# # Specify authorization header name.
# # Default: X-Auth-User
# AUTHZ_HEADER=

# # Specify valid authorization tokens.
# # Default: empty - authorization is disabled, protected API calls cannot be issued
# AUTHZ_TOKEN=

# ################################################################################
# # Spring Configuration
# ################################################################################
# # Specify Spring environment: local, docker, production, development
# # Default: local
SPRING_PROFILES_ACTIVE=docker
KAFKA_TOPIC=submission
